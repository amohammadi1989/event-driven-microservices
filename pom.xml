<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
	</parent>
	<modules>
		<module>batch-to-kafka-services</module>
		<module>config-services</module>
		<module>config-kafka</module>
		<module>config-server</module>
		<module>kafka-to-elastic-services</module>
		<module>config-elastic</module>
		<module>elastic-query-client</module>
        <module>service-registry</module>
		<module>gateway-services</module>
    </modules>
	<groupId>com.example</groupId>
	<artifactId>microservices</artifactId>
	<version>1.0</version>
	<name>microservices</name>
	<packaging>pom</packaging>
	<description>Microservices project for Spring Boot</description>
	<properties>
		<java.version>11</java.version>
		<spring-boot.version>2.3.4.RELEASE</spring-boot.version>
		<twitter4j.version>4.0.7</twitter4j.version>
		<lombok.version>1.18.22</lombok.version>
		<version.project>1.0</version.project>
		<avro.version>1.11.0</avro.version>
		<version.confluent>5.3.0</version.confluent>
		<spring-kafka.version>2.6.2</spring-kafka.version>
		<spring-data-elasticsearch.version>4.0.0.RELEASE</spring-data-elasticsearch.version>
		<spring-cloud-starter-config.version> 2.3.RELEASE</spring-cloud-starter-config.version>
		<elasticsearch.version>7.6.2</elasticsearch.version>
		<spring-cloud-resilience4j.version>2.0.2</spring-cloud-resilience4j.version>
		<keycloak-spring-boot-starter.version>13.0.1</keycloak-spring-boot-starter.version>
		<spring-boot-starter-oauth2-resource-server.version>2.6.2
		</spring-boot-starter-oauth2-resource-server.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.keycloak</groupId>
				<artifactId>keycloak-spring-boot-starter</artifactId>
				<version>13.0.1</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${spring-cloud-starter-config.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-elasticsearch</artifactId>
				<version>${spring-data-elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>


			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-config</artifactId>
				<version>${spring-cloud-starter-config.version}</version>
			</dependency>


	<!--		<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
				<version>${spring-boot-starter-oauth2-resource-server.version}</version>
			</dependency>-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-aop</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
<!--			<dependency>
				<groupId>org.keycloak</groupId>
				<artifactId>keycloak-spring-boot-starter</artifactId>
			</dependency>-->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-elasticsearch</artifactId>
				<version>${spring-data-elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${spring-cloud-starter-config.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-eureka</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
				<version>${spring-cloud-resilience4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring-kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-schema-registry-client</artifactId>
				<version>${version.confluent}</version>
			</dependency>


			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-avro-serializer</artifactId>
				<version>${version.confluent}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-annotations</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>


			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>monitoring-interceptors</artifactId>
				<version>${version.confluent}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>com.example</groupId>
				<artifactId>config-services</artifactId>
				<version>${version.project}</version>
			</dependency>
			<dependency>
				<groupId>com.example</groupId>
				<artifactId>kafka-config</artifactId>
				<version>${version.project}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<scope>runtime</scope>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.twitter4j</groupId>
				<artifactId>twitter4j-stream</artifactId>
				<version>${twitter4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${spring-cloud-starter-config.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
<!--		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
		</plugins>-->

<!--		CTRL+SHIFT+O ==>RELOAD
		ALT+CTRL+V ==>ADD VERTION OF DEP TO PROPERTIES SECTION-->

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.avro</groupId>
					<artifactId>avro-maven-plugin</artifactId>
					<version>${avro.version}</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>schema</goal>
								<goal>protocol</goal>
								<goal>idl-protocol</goal>
							</goals>
							<configuration>
								<sourceDirectory>${project.basedir}/src/main/resources/avro</sourceDirectory>
								<targetDirectory>${project.basedir}/src/main/java/</targetDirectory>
								<stringType>String</stringType>
								<createSetters>true</createSetters>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
